{"provider_url": "http://wikipedia.org", "description": "JSONP or \"JSON with padding\" is a complement to the base JavaScript Object Notation JSON data format, a pattern of usage allowing a page to request data from a server in a different domain. JSONP is a solution to this problem, forming an alternative to a more recent method named Cross-Origin Resource Sharing.", "title": "JSONP - Wikipedia, the free encyclopedia", "url": "http://en.wikipedia.org/wiki/JSONP", "html": "<p><b>JSONP</b> or \"JSON with padding\" is a complement to the base JavaScript Object Notation <a href=\"http://en.wikipedia.org/wiki/JSON\" title=\"JSON\">JSON</a> data format, a <i>pattern of usage</i> allowing a page to request data from a server in a different domain. JSONP is a solution to this problem, forming an alternative to a more recent method named <a href=\"http://en.wikipedia.org/wiki/Cross-Origin_Resource_Sharing\" title=\"Cross-Origin Resource Sharing\">Cross-Origin Resource Sharing</a>.</p>\n<p>Under the <a href=\"http://en.wikipedia.org/wiki/Same_origin_policy\" title=\"Same origin policy\">same origin policy</a>, a web page served from server1.example.com cannot normally connect to or communicate with a server other than server1.example.com. An exception is the <a href=\"http://en.wikipedia.org/wiki/HTML\" title=\"HTML\">HTML</a> <a href=\"http://en.wikipedia.org/wiki/HTML_element#script_tag\" title=\"HTML element\"><code>&lt;script&gt;</code></a> element. Exploiting the open policy for <code>&lt;script&gt;</code> elements, some pages use them to retrieve JavaScript code that operates on dynamically generated JSON-formatted data from other origins. This usage pattern is known as JSONP. Requests for JSONP retrieve not JSON, but arbitrary JavaScript code. They are evaluated by the JavaScript interpreter, not parsed by a JSON parser.</p>\n<p>To see how this pattern works, first consider a URL which on request returns a JSON document. A JavaScript program might request this URL via <a href=\"http://en.wikipedia.org/wiki/XMLHttpRequest\" title=\"XMLHttpRequest\">XMLHttpRequest</a>, for example. Suppose a URL is <a rel=\"nofollow\" class=\"external free\" href=\"http://server2.example.com/RetrieveUser?UserId=xxx\">http://server2.example.com/RetrieveUser?UserId=xxx</a>. Suppose the UserId of Foo is 1234. A browser requesting the URL <a rel=\"nofollow\" class=\"external free\" href=\"http://server2.example.com/RetrieveUser?UserId=1234\">http://server2.example.com/RetrieveUser?UserId=1234</a>, passing the UserId of Foo, might receive something like:</p>", "version": "1.0", "provider_name": "Wikipedia", "type": "link"}